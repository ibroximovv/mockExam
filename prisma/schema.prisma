// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        String     @id @default(uuid())
  name      String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Question  Question[]
}

model QuestionLevel {
  id        String     @id @default(uuid())
  level     String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Question  Question[]
}

model Question {
  id              String         @id @default(uuid())
  content         String
  QuestionLevel   QuestionLevel? @relation(fields: [questionLevelId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  Answer          Answer[]
  Admin           Admin?         @relation(fields: [adminId], references: [id])
  questionLevelId String?
  adminId         String?
}

model Answer {
  id            String   @id @default(uuid())
  optionA       String
  optionB       String
  optionC       String
  optionD       String
  correctOption Option
  Question      Question @relation(fields: [questionId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  questionId String
}

enum Option {
  A
  B
  C
  D
}
